//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4927
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FotoFly.BingMapsForEnterprise {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://s.mappoint.net/mappoint-30/", ConfigurationName="BingMapsForEnterprise.CommonServiceSoap")]
    public interface CommonServiceSoap {
        
        // CODEGEN: Generating message contract since message GetVersionInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetVersionInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetVersionInfoResponse GetVersionInfo(FotoFly.BingMapsForEnterprise.GetVersionInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetCountryRegionInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetCountryRegionInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetCountryRegionInfoResponse GetCountryRegionInfo(FotoFly.BingMapsForEnterprise.GetCountryRegionInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetEntityTypesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetEntityTypes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetEntityTypesResponse GetEntityTypes(FotoFly.BingMapsForEnterprise.GetEntityTypesRequest request);
        
        // CODEGEN: Generating message contract since message GetDataSourceInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetDataSourceInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetDataSourceInfoResponse GetDataSourceInfo(FotoFly.BingMapsForEnterprise.GetDataSourceInfoRequest request);
        
        // CODEGEN: Generating message contract since message GetGreatCircleDistancesRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetGreatCircleDistances", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetGreatCircleDistancesResponse GetGreatCircleDistances(FotoFly.BingMapsForEnterprise.GetGreatCircleDistancesRequest request);
        
        // CODEGEN: Generating message contract since message GetClientTokenRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetClientToken", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetClientTokenResponse GetClientToken(FotoFly.BingMapsForEnterprise.GetClientTokenRequest request);
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerInfoRenderHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerInfoRouteHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CustomerInfoFindHeader))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CustomerInfoHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short customLogEntryField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public short CustomLogEntry {
            get {
                return this.customLogEntryField;
            }
            set {
                this.customLogEntryField = value;
                this.RaisePropertyChanged("CustomLogEntry");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LineDriveMapImage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private MimeData mimeDataField;
        
        private string urlField;
        
        private MapViewRepresentations viewField;
        
        private int firstDirectionIDField;
        
        private int lastDirectionIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public MimeData MimeData {
            get {
                return this.mimeDataField;
            }
            set {
                this.mimeDataField = value;
                this.RaisePropertyChanged("MimeData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("Url");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
                this.RaisePropertyChanged("View");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int FirstDirectionID {
            get {
                return this.firstDirectionIDField;
            }
            set {
                this.firstDirectionIDField = value;
                this.RaisePropertyChanged("FirstDirectionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public int LastDirectionID {
            get {
                return this.lastDirectionIDField;
            }
            set {
                this.lastDirectionIDField = value;
                this.RaisePropertyChanged("LastDirectionID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MimeData : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] bitsField;
        
        private string contentIDField;
        
        private string mimeTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] Bits {
            get {
                return this.bitsField;
            }
            set {
                this.bitsField = value;
                this.RaisePropertyChanged("Bits");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ContentID {
            get {
                return this.contentIDField;
            }
            set {
                this.contentIDField = value;
                this.RaisePropertyChanged("ContentID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
                this.RaisePropertyChanged("MimeType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapViewRepresentations : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ViewByScale byScaleField;
        
        private ViewByHeightWidth byHeightWidthField;
        
        private ViewByBoundingRectangle byBoundingRectangleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ViewByScale ByScale {
            get {
                return this.byScaleField;
            }
            set {
                this.byScaleField = value;
                this.RaisePropertyChanged("ByScale");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ViewByHeightWidth ByHeightWidth {
            get {
                return this.byHeightWidthField;
            }
            set {
                this.byHeightWidthField = value;
                this.RaisePropertyChanged("ByHeightWidth");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ViewByBoundingRectangle ByBoundingRectangle {
            get {
                return this.byBoundingRectangleField;
            }
            set {
                this.byBoundingRectangleField = value;
                this.RaisePropertyChanged("ByBoundingRectangle");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ViewByScale : MapView {
        
        private double mapScaleField;
        
        private LatLong centerPointField;
        
        public ViewByScale() {
            this.mapScaleField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double MapScale {
            get {
                return this.mapScaleField;
            }
            set {
                this.mapScaleField = value;
                this.RaisePropertyChanged("MapScale");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LatLong CenterPoint {
            get {
                return this.centerPointField;
            }
            set {
                this.centerPointField = value;
                this.RaisePropertyChanged("CenterPoint");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLong : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double latitudeField;
        
        private double longitudeField;
        
        public LatLong() {
            this.latitudeField = 0;
            this.longitudeField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Latitude {
            get {
                return this.latitudeField;
            }
            set {
                this.latitudeField = value;
                this.RaisePropertyChanged("Latitude");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Longitude {
            get {
                return this.longitudeField;
            }
            set {
                this.longitudeField = value;
                this.RaisePropertyChanged("Longitude");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ViewByBoundingRectangle))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ViewByBoundingLocations))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ViewByHeightWidth))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ViewByScale))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public abstract partial class MapView : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ViewByBoundingRectangle : MapView {
        
        private LatLongRectangle boundingRectangleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LatLongRectangle BoundingRectangle {
            get {
                return this.boundingRectangleField;
            }
            set {
                this.boundingRectangleField = value;
                this.RaisePropertyChanged("BoundingRectangle");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLongRectangle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LatLong southwestField;
        
        private LatLong northeastField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LatLong Southwest {
            get {
                return this.southwestField;
            }
            set {
                this.southwestField = value;
                this.RaisePropertyChanged("Southwest");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LatLong Northeast {
            get {
                return this.northeastField;
            }
            set {
                this.northeastField = value;
                this.RaisePropertyChanged("Northeast");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ViewByBoundingLocations : MapView {
        
        private Location[] locationsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Location[] Locations {
            get {
                return this.locationsField;
            }
            set {
                this.locationsField = value;
                this.RaisePropertyChanged("Locations");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Location : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LatLong latLongField;
        
        private Entity entityField;
        
        private Address addressField;
        
        private MapViewRepresentations bestMapViewField;
        
        private string dataSourceNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
                this.RaisePropertyChanged("LatLong");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Entity Entity {
            get {
                return this.entityField;
            }
            set {
                this.entityField = value;
                this.RaisePropertyChanged("Entity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Address Address {
            get {
                return this.addressField;
            }
            set {
                this.addressField = value;
                this.RaisePropertyChanged("Address");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public MapViewRepresentations BestMapView {
            get {
                return this.bestMapViewField;
            }
            set {
                this.bestMapViewField = value;
                this.RaisePropertyChanged("BestMapView");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Entity : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int idField;
        
        private string nameField;
        
        private string displayNameField;
        
        private string typeNameField;
        
        private EntityPropertyValue[] propertiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("DisplayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string TypeName {
            get {
                return this.typeNameField;
            }
            set {
                this.typeNameField = value;
                this.RaisePropertyChanged("TypeName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Property")]
        public EntityPropertyValue[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
                this.RaisePropertyChanged("Properties");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityPropertyValue : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private object valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public object Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Address : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string addressLineField;
        
        private string primaryCityField;
        
        private string secondaryCityField;
        
        private string subdivisionField;
        
        private string postalCodeField;
        
        private string countryRegionField;
        
        private string formattedAddressField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string AddressLine {
            get {
                return this.addressLineField;
            }
            set {
                this.addressLineField = value;
                this.RaisePropertyChanged("AddressLine");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string PrimaryCity {
            get {
                return this.primaryCityField;
            }
            set {
                this.primaryCityField = value;
                this.RaisePropertyChanged("PrimaryCity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string SecondaryCity {
            get {
                return this.secondaryCityField;
            }
            set {
                this.secondaryCityField = value;
                this.RaisePropertyChanged("SecondaryCity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Subdivision {
            get {
                return this.subdivisionField;
            }
            set {
                this.subdivisionField = value;
                this.RaisePropertyChanged("Subdivision");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string PostalCode {
            get {
                return this.postalCodeField;
            }
            set {
                this.postalCodeField = value;
                this.RaisePropertyChanged("PostalCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string CountryRegion {
            get {
                return this.countryRegionField;
            }
            set {
                this.countryRegionField = value;
                this.RaisePropertyChanged("CountryRegion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string FormattedAddress {
            get {
                return this.formattedAddressField;
            }
            set {
                this.formattedAddressField = value;
                this.RaisePropertyChanged("FormattedAddress");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ViewByHeightWidth : MapView {
        
        private double heightField;
        
        private double widthField;
        
        private LatLong centerPointField;
        
        public ViewByHeightWidth() {
            this.heightField = 0;
            this.widthField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public double Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
                this.RaisePropertyChanged("Width");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public LatLong CenterPoint {
            get {
                return this.centerPointField;
            }
            set {
                this.centerPointField = value;
                this.RaisePropertyChanged("CenterPoint");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LineDriveMapOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ImageFormat formatField;
        
        private MapReturnType returnTypeField;
        
        private MapFontSize fontSizeField;
        
        private PaletteType paletteTypeField;
        
        private string destinationIconDataSourceField;
        
        private string destinationIconNameField;
        
        public LineDriveMapOptions() {
            this.returnTypeField = MapReturnType.ReturnImage;
            this.fontSizeField = MapFontSize.Smaller;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ImageFormat Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
                this.RaisePropertyChanged("Format");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(MapReturnType.ReturnImage)]
        public MapReturnType ReturnType {
            get {
                return this.returnTypeField;
            }
            set {
                this.returnTypeField = value;
                this.RaisePropertyChanged("ReturnType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DefaultValueAttribute(MapFontSize.Smaller)]
        public MapFontSize FontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
                this.RaisePropertyChanged("FontSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public PaletteType PaletteType {
            get {
                return this.paletteTypeField;
            }
            set {
                this.paletteTypeField = value;
                this.RaisePropertyChanged("PaletteType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string DestinationIconDataSource {
            get {
                return this.destinationIconDataSourceField;
            }
            set {
                this.destinationIconDataSourceField = value;
                this.RaisePropertyChanged("DestinationIconDataSource");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string DestinationIconName {
            get {
                return this.destinationIconNameField;
            }
            set {
                this.destinationIconNameField = value;
                this.RaisePropertyChanged("DestinationIconName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ImageFormat : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string mimeTypeField;
        
        private int heightField;
        
        private int widthField;
        
        public ImageFormat() {
            this.mimeTypeField = "image/gif";
            this.heightField = 240;
            this.widthField = 296;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute("image/gif")]
        public string MimeType {
            get {
                return this.mimeTypeField;
            }
            set {
                this.mimeTypeField = value;
                this.RaisePropertyChanged("MimeType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(240)]
        public int Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
                this.RaisePropertyChanged("Height");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DefaultValueAttribute(296)]
        public int Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
                this.RaisePropertyChanged("Width");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum MapReturnType {
        
        /// <remarks/>
        ReturnImage,
        
        /// <remarks/>
        ReturnUrl,
        
        /// <remarks/>
        ReturnSecureUrl,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum MapFontSize {
        
        /// <remarks/>
        Smallest,
        
        /// <remarks/>
        Smaller,
        
        /// <remarks/>
        Medium,
        
        /// <remarks/>
        Larger,
        
        /// <remarks/>
        Largest,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum PaletteType {
        
        /// <remarks/>
        Color,
        
        /// <remarks/>
        GrayScale,
        
        /// <remarks/>
        Monochrome,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LineDriveMapSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Route routeField;
        
        private LineDriveMapOptions optionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Route Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
                this.RaisePropertyChanged("Route");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LineDriveMapOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Route : object, System.ComponentModel.INotifyPropertyChanged {
        
        private RouteSpecification specificationField;
        
        private RouteItinerary itineraryField;
        
        private CalculatedRouteRepresentation calculatedRepresentationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public RouteSpecification Specification {
            get {
                return this.specificationField;
            }
            set {
                this.specificationField = value;
                this.RaisePropertyChanged("Specification");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RouteItinerary Itinerary {
            get {
                return this.itineraryField;
            }
            set {
                this.itineraryField = value;
                this.RaisePropertyChanged("Itinerary");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public CalculatedRouteRepresentation CalculatedRepresentation {
            get {
                return this.calculatedRepresentationField;
            }
            set {
                this.calculatedRepresentationField = value;
                this.RaisePropertyChanged("CalculatedRepresentation");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class RouteSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SegmentSpecification[] segmentsField;
        
        private RouteResultMask resultMaskField;
        
        private string dataSourceNameField;
        
        private DriverProfile driverProfileField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public SegmentSpecification[] Segments {
            get {
                return this.segmentsField;
            }
            set {
                this.segmentsField = value;
                this.RaisePropertyChanged("Segments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RouteResultMask ResultMask {
            get {
                return this.resultMaskField;
            }
            set {
                this.resultMaskField = value;
                this.RaisePropertyChanged("ResultMask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public DriverProfile DriverProfile {
            get {
                return this.driverProfileField;
            }
            set {
                this.driverProfileField = value;
                this.RaisePropertyChanged("DriverProfile");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class SegmentSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Waypoint waypointField;
        
        private SegmentOptions optionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Waypoint Waypoint {
            get {
                return this.waypointField;
            }
            set {
                this.waypointField = value;
                this.RaisePropertyChanged("Waypoint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SegmentOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Waypoint : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Location locationField;
        
        private SnapType snapField;
        
        private string nameField;
        
        private Location calculatedLocationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Location Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
                this.RaisePropertyChanged("Location");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SnapType Snap {
            get {
                return this.snapField;
            }
            set {
                this.snapField = value;
                this.RaisePropertyChanged("Snap");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public Location CalculatedLocation {
            get {
                return this.calculatedLocationField;
            }
            set {
                this.calculatedLocationField = value;
                this.RaisePropertyChanged("CalculatedLocation");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SnapType {
        
        /// <remarks/>
        Normal,
        
        /// <remarks/>
        City,
        
        /// <remarks/>
        NearestRoad,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class SegmentOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private SegmentPreference preferenceField;
        
        private bool calculateSegmentMapViewField;
        
        private bool calculateDirectionMapViewField;
        
        public SegmentOptions() {
            this.calculateSegmentMapViewField = true;
            this.calculateDirectionMapViewField = true;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public SegmentPreference Preference {
            get {
                return this.preferenceField;
            }
            set {
                this.preferenceField = value;
                this.RaisePropertyChanged("Preference");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CalculateSegmentMapView {
            get {
                return this.calculateSegmentMapViewField;
            }
            set {
                this.calculateSegmentMapViewField = value;
                this.RaisePropertyChanged("CalculateSegmentMapView");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool CalculateDirectionMapView {
            get {
                return this.calculateDirectionMapViewField;
            }
            set {
                this.calculateDirectionMapViewField = value;
                this.RaisePropertyChanged("CalculateDirectionMapView");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SegmentPreference {
        
        /// <remarks/>
        Quickest,
        
        /// <remarks/>
        Shortest,
        
        /// <remarks/>
        PreferredRoads,
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum RouteResultMask {
        
        /// <remarks/>
        Itinerary = 1,
        
        /// <remarks/>
        CalculatedRouteRepresentation = 2,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class DriverProfile : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int dayStartTimeField;
        
        private int dayEndTimeField;
        
        private PreferredRoadTypes preferredRoadTypesField;
        
        public DriverProfile() {
            this.dayStartTimeField = -1;
            this.dayEndTimeField = -1;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int DayStartTime {
            get {
                return this.dayStartTimeField;
            }
            set {
                this.dayStartTimeField = value;
                this.RaisePropertyChanged("DayStartTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(-1)]
        public int DayEndTime {
            get {
                return this.dayEndTimeField;
            }
            set {
                this.dayEndTimeField = value;
                this.RaisePropertyChanged("DayEndTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public PreferredRoadTypes PreferredRoadTypes {
            get {
                return this.preferredRoadTypesField;
            }
            set {
                this.preferredRoadTypesField = value;
                this.RaisePropertyChanged("PreferredRoadTypes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class PreferredRoadTypes : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double highwaysField;
        
        private double majorRoadsField;
        
        private double minorRoadsField;
        
        private double tollRoadsField;
        
        private double ferriesField;
        
        public PreferredRoadTypes() {
            this.highwaysField = 0.5;
            this.majorRoadsField = 0.5;
            this.minorRoadsField = 0.5;
            this.tollRoadsField = 0.5;
            this.ferriesField = 0.5;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double Highways {
            get {
                return this.highwaysField;
            }
            set {
                this.highwaysField = value;
                this.RaisePropertyChanged("Highways");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double MajorRoads {
            get {
                return this.majorRoadsField;
            }
            set {
                this.majorRoadsField = value;
                this.RaisePropertyChanged("MajorRoads");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double MinorRoads {
            get {
                return this.minorRoadsField;
            }
            set {
                this.minorRoadsField = value;
                this.RaisePropertyChanged("MinorRoads");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double TollRoads {
            get {
                return this.tollRoadsField;
            }
            set {
                this.tollRoadsField = value;
                this.RaisePropertyChanged("TollRoads");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DefaultValueAttribute(0.5)]
        public double Ferries {
            get {
                return this.ferriesField;
            }
            set {
                this.ferriesField = value;
                this.RaisePropertyChanged("Ferries");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class RouteItinerary : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Segment[] segmentsField;
        
        private long tripTimeField;
        
        private long drivingTimeField;
        
        private double distanceField;
        
        private MapViewRepresentations viewField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Segment[] Segments {
            get {
                return this.segmentsField;
            }
            set {
                this.segmentsField = value;
                this.RaisePropertyChanged("Segments");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public long TripTime {
            get {
                return this.tripTimeField;
            }
            set {
                this.tripTimeField = value;
                this.RaisePropertyChanged("TripTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long DrivingTime {
            get {
                return this.drivingTimeField;
            }
            set {
                this.drivingTimeField = value;
                this.RaisePropertyChanged("DrivingTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("Distance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
                this.RaisePropertyChanged("View");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Segment : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Waypoint waypointField;
        
        private Direction[] directionsField;
        
        private long tripTimeField;
        
        private long drivingTimeField;
        
        private double distanceField;
        
        private MapViewRepresentations viewField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Waypoint Waypoint {
            get {
                return this.waypointField;
            }
            set {
                this.waypointField = value;
                this.RaisePropertyChanged("Waypoint");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public Direction[] Directions {
            get {
                return this.directionsField;
            }
            set {
                this.directionsField = value;
                this.RaisePropertyChanged("Directions");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public long TripTime {
            get {
                return this.tripTimeField;
            }
            set {
                this.tripTimeField = value;
                this.RaisePropertyChanged("TripTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public long DrivingTime {
            get {
                return this.drivingTimeField;
            }
            set {
                this.drivingTimeField = value;
                this.RaisePropertyChanged("DrivingTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("Distance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
                this.RaisePropertyChanged("View");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Direction : object, System.ComponentModel.INotifyPropertyChanged {
        
        private LatLong latLongField;
        
        private DirectionType directionTypeField;
        
        private DirectionAction actionField;
        
        private float bearingOutOfTurnField;
        
        private float bearingIntoTurnField;
        
        private long durationField;
        
        private double distanceField;
        
        private string towardsField;
        
        private string instructionField;
        
        private string formattedInstructionField;
        
        private int idField;
        
        private MapViewRepresentations viewField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
                this.RaisePropertyChanged("LatLong");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DirectionType DirectionType {
            get {
                return this.directionTypeField;
            }
            set {
                this.directionTypeField = value;
                this.RaisePropertyChanged("DirectionType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public DirectionAction Action {
            get {
                return this.actionField;
            }
            set {
                this.actionField = value;
                this.RaisePropertyChanged("Action");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public float BearingOutOfTurn {
            get {
                return this.bearingOutOfTurnField;
            }
            set {
                this.bearingOutOfTurnField = value;
                this.RaisePropertyChanged("BearingOutOfTurn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public float BearingIntoTurn {
            get {
                return this.bearingIntoTurnField;
            }
            set {
                this.bearingIntoTurnField = value;
                this.RaisePropertyChanged("BearingIntoTurn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public long Duration {
            get {
                return this.durationField;
            }
            set {
                this.durationField = value;
                this.RaisePropertyChanged("Duration");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("Distance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string Towards {
            get {
                return this.towardsField;
            }
            set {
                this.towardsField = value;
                this.RaisePropertyChanged("Towards");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Instruction {
            get {
                return this.instructionField;
            }
            set {
                this.instructionField = value;
                this.RaisePropertyChanged("Instruction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public string FormattedInstruction {
            get {
                return this.formattedInstructionField;
            }
            set {
                this.formattedInstructionField = value;
                this.RaisePropertyChanged("FormattedInstruction");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        public int ID {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
                this.RaisePropertyChanged("ID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
                this.RaisePropertyChanged("View");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DirectionType {
        
        /// <remarks/>
        Driving,
        
        /// <remarks/>
        Border,
        
        /// <remarks/>
        StartOfDay,
        
        /// <remarks/>
        EndOfDay,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Waypoint,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DirectionAction {
        
        /// <remarks/>
        Other,
        
        /// <remarks/>
        Depart,
        
        /// <remarks/>
        Arrive,
        
        /// <remarks/>
        TurnLeft,
        
        /// <remarks/>
        TurnRight,
        
        /// <remarks/>
        BearLeft,
        
        /// <remarks/>
        BearRight,
        
        /// <remarks/>
        Merge,
        
        /// <remarks/>
        Continue,
        
        /// <remarks/>
        TurnBack,
        
        /// <remarks/>
        TakeRoundabout,
        
        /// <remarks/>
        ConstructionDelay,
        
        /// <remarks/>
        ConstructionStop,
        
        /// <remarks/>
        NameChange,
        
        /// <remarks/>
        LeftLeft,
        
        /// <remarks/>
        LeftRight,
        
        /// <remarks/>
        RightLeft,
        
        /// <remarks/>
        RightRight,
        
        /// <remarks/>
        TakeRamp,
        
        /// <remarks/>
        TakeRampLeft,
        
        /// <remarks/>
        TakeRampRight,
        
        /// <remarks/>
        KeepStraight,
        
        /// <remarks/>
        KeepLeft,
        
        /// <remarks/>
        KeepRight,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CalculatedRouteRepresentation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte[] bitsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary", Order=0)]
        public byte[] Bits {
            get {
                return this.bitsField;
            }
            set {
                this.bitsField = value;
                this.RaisePropertyChanged("Bits");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class PixelRectangle : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int bottomField;
        
        private int leftField;
        
        private int rightField;
        
        private int topField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int Bottom {
            get {
                return this.bottomField;
            }
            set {
                this.bottomField = value;
                this.RaisePropertyChanged("Bottom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Left {
            get {
                return this.leftField;
            }
            set {
                this.leftField = value;
                this.RaisePropertyChanged("Left");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public int Right {
            get {
                return this.rightField;
            }
            set {
                this.rightField = value;
                this.RaisePropertyChanged("Right");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public int Top {
            get {
                return this.topField;
            }
            set {
                this.topField = value;
                this.RaisePropertyChanged("Top");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class HotArea : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PixelRectangle iconRectangleField;
        
        private PixelRectangle labelRectangleField;
        
        private string pinIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public PixelRectangle IconRectangle {
            get {
                return this.iconRectangleField;
            }
            set {
                this.iconRectangleField = value;
                this.RaisePropertyChanged("IconRectangle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PixelRectangle LabelRectangle {
            get {
                return this.labelRectangleField;
            }
            set {
                this.labelRectangleField = value;
                this.RaisePropertyChanged("LabelRectangle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string PinID {
            get {
                return this.pinIDField;
            }
            set {
                this.pinIDField = value;
                this.RaisePropertyChanged("PinID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapImage : object, System.ComponentModel.INotifyPropertyChanged {
        
        private HotArea[] hotAreasField;
        
        private MimeData mimeDataField;
        
        private MapViewRepresentations viewField;
        
        private string urlField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public HotArea[] HotAreas {
            get {
                return this.hotAreasField;
            }
            set {
                this.hotAreasField = value;
                this.RaisePropertyChanged("HotAreas");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public MimeData MimeData {
            get {
                return this.mimeDataField;
            }
            set {
                this.mimeDataField = value;
                this.RaisePropertyChanged("MimeData");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public MapViewRepresentations View {
            get {
                return this.viewField;
            }
            set {
                this.viewField = value;
                this.RaisePropertyChanged("View");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Url {
            get {
                return this.urlField;
            }
            set {
                this.urlField = value;
                this.RaisePropertyChanged("Url");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class PixelCoord : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int xField;
        
        private int yField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int X {
            get {
                return this.xField;
            }
            set {
                this.xField = value;
                this.RaisePropertyChanged("X");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Y {
            get {
                return this.yField;
            }
            set {
                this.yField = value;
                this.RaisePropertyChanged("Y");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Pushpin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string iconDataSourceField;
        
        private string iconNameField;
        
        private string labelField;
        
        private LatLong latLongField;
        
        private string pinIDField;
        
        private PixelCoord pixelField;
        
        private bool returnsHotAreaField;
        
        private bool labelNearbyRoadsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string IconDataSource {
            get {
                return this.iconDataSourceField;
            }
            set {
                this.iconDataSourceField = value;
                this.RaisePropertyChanged("IconDataSource");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string IconName {
            get {
                return this.iconNameField;
            }
            set {
                this.iconNameField = value;
                this.RaisePropertyChanged("IconName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
                this.RaisePropertyChanged("Label");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
                this.RaisePropertyChanged("LatLong");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string PinID {
            get {
                return this.pinIDField;
            }
            set {
                this.pinIDField = value;
                this.RaisePropertyChanged("PinID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public PixelCoord Pixel {
            get {
                return this.pixelField;
            }
            set {
                this.pixelField = value;
                this.RaisePropertyChanged("Pixel");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public bool ReturnsHotArea {
            get {
                return this.returnsHotAreaField;
            }
            set {
                this.returnsHotAreaField = value;
                this.RaisePropertyChanged("ReturnsHotArea");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool LabelNearbyRoads {
            get {
                return this.labelNearbyRoadsField;
            }
            set {
                this.labelNearbyRoadsField = value;
                this.RaisePropertyChanged("LabelNearbyRoads");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private RouteHighlightColor routeHighlightColorField;
        
        private RouteHighlightColor constructionDelayHighlightColorField;
        
        private RouteHighlightColor constructionClosureHighlightColorField;
        
        private MapFontSize fontSizeField;
        
        private ImageFormat formatField;
        
        private bool isOverviewMapField;
        
        private MapReturnType returnTypeField;
        
        private double panHorizontalField;
        
        private double panVerticalField;
        
        private MapStyle styleField;
        
        private double zoomField;
        
        private bool preventIconCollisionsField;
        
        public MapOptions() {
            this.fontSizeField = MapFontSize.Smaller;
            this.isOverviewMapField = false;
            this.returnTypeField = MapReturnType.ReturnImage;
            this.zoomField = 1;
            this.preventIconCollisionsField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public RouteHighlightColor RouteHighlightColor {
            get {
                return this.routeHighlightColorField;
            }
            set {
                this.routeHighlightColorField = value;
                this.RaisePropertyChanged("RouteHighlightColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public RouteHighlightColor ConstructionDelayHighlightColor {
            get {
                return this.constructionDelayHighlightColorField;
            }
            set {
                this.constructionDelayHighlightColorField = value;
                this.RaisePropertyChanged("ConstructionDelayHighlightColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public RouteHighlightColor ConstructionClosureHighlightColor {
            get {
                return this.constructionClosureHighlightColorField;
            }
            set {
                this.constructionClosureHighlightColorField = value;
                this.RaisePropertyChanged("ConstructionClosureHighlightColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DefaultValueAttribute(MapFontSize.Smaller)]
        public MapFontSize FontSize {
            get {
                return this.fontSizeField;
            }
            set {
                this.fontSizeField = value;
                this.RaisePropertyChanged("FontSize");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public ImageFormat Format {
            get {
                return this.formatField;
            }
            set {
                this.formatField = value;
                this.RaisePropertyChanged("Format");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool IsOverviewMap {
            get {
                return this.isOverviewMapField;
            }
            set {
                this.isOverviewMapField = value;
                this.RaisePropertyChanged("IsOverviewMap");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DefaultValueAttribute(MapReturnType.ReturnImage)]
        public MapReturnType ReturnType {
            get {
                return this.returnTypeField;
            }
            set {
                this.returnTypeField = value;
                this.RaisePropertyChanged("ReturnType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public double PanHorizontal {
            get {
                return this.panHorizontalField;
            }
            set {
                this.panHorizontalField = value;
                this.RaisePropertyChanged("PanHorizontal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public double PanVertical {
            get {
                return this.panVerticalField;
            }
            set {
                this.panVerticalField = value;
                this.RaisePropertyChanged("PanVertical");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        public MapStyle Style {
            get {
                return this.styleField;
            }
            set {
                this.styleField = value;
                this.RaisePropertyChanged("Style");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DefaultValueAttribute(1)]
        public double Zoom {
            get {
                return this.zoomField;
            }
            set {
                this.zoomField = value;
                this.RaisePropertyChanged("Zoom");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool PreventIconCollisions {
            get {
                return this.preventIconCollisionsField;
            }
            set {
                this.preventIconCollisionsField = value;
                this.RaisePropertyChanged("PreventIconCollisions");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum RouteHighlightColor {
        
        /// <remarks/>
        DefaultColor,
        
        /// <remarks/>
        Green,
        
        /// <remarks/>
        Yellow,
        
        /// <remarks/>
        Cyan,
        
        /// <remarks/>
        Red,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum MapStyle {
        
        /// <remarks/>
        DefaultStyle,
        
        /// <remarks/>
        Locator,
        
        /// <remarks/>
        Terrain,
        
        /// <remarks/>
        Road,
        
        /// <remarks/>
        Political,
        
        /// <remarks/>
        Small,
        
        /// <remarks/>
        LocatorBW,
        
        /// <remarks/>
        TerrainBW,
        
        /// <remarks/>
        RoadBW,
        
        /// <remarks/>
        PoliticalBW,
        
        /// <remarks/>
        SmallBW,
        
        /// <remarks/>
        Comprehensive,
        
        /// <remarks/>
        PhysicalFeatures,
        
        /// <remarks/>
        Tectonic,
        
        /// <remarks/>
        EarthByDay,
        
        /// <remarks/>
        EarthByNight,
        
        /// <remarks/>
        Ecoregions,
        
        /// <remarks/>
        Climate,
        
        /// <remarks/>
        TemperatureJanuary,
        
        /// <remarks/>
        TemperatureJuly,
        
        /// <remarks/>
        PrecipitationJanuary,
        
        /// <remarks/>
        PrecipitationJuly,
        
        /// <remarks/>
        PrecipitationAnnual,
        
        /// <remarks/>
        Languages,
        
        /// <remarks/>
        Religions,
        
        /// <remarks/>
        PopulationDensity,
        
        /// <remarks/>
        Parks,
        
        /// <remarks/>
        TimeZones,
        
        /// <remarks/>
        Outline,
        
        /// <remarks/>
        Phone,
        
        /// <remarks/>
        PhoneBW,
        
        /// <remarks/>
        Night,
        
        /// <remarks/>
        Europe,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class ElementColor : object, System.ComponentModel.INotifyPropertyChanged {
        
        private byte aField;
        
        private byte rField;
        
        private byte gField;
        
        private byte bField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public byte A {
            get {
                return this.aField;
            }
            set {
                this.aField = value;
                this.RaisePropertyChanged("A");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public byte R {
            get {
                return this.rField;
            }
            set {
                this.rField = value;
                this.RaisePropertyChanged("R");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public byte G {
            get {
                return this.gField;
            }
            set {
                this.gField = value;
                this.RaisePropertyChanged("G");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public byte B {
            get {
                return this.bField;
            }
            set {
                this.bField = value;
                this.RaisePropertyChanged("B");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class Polygon : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private int entityIDField;
        
        private ElementColor borderColorField;
        
        private ElementColor fillColorField;
        
        private string labelField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
                this.RaisePropertyChanged("EntityID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ElementColor BorderColor {
            get {
                return this.borderColorField;
            }
            set {
                this.borderColorField = value;
                this.RaisePropertyChanged("BorderColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public ElementColor FillColor {
            get {
                return this.fillColorField;
            }
            set {
                this.fillColorField = value;
                this.RaisePropertyChanged("FillColor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Label {
            get {
                return this.labelField;
            }
            set {
                this.labelField = value;
                this.RaisePropertyChanged("Label");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Polygon[] polygonsField;
        
        private string dataSourceNameField;
        
        private int[] highlightedEntityIDsField;
        
        private string[] hideEntityTypesField;
        
        private MapOptions optionsField;
        
        private Pushpin[] pushpinsField;
        
        private Route routeField;
        
        private MapView[] viewsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        public Polygon[] Polygons {
            get {
                return this.polygonsField;
            }
            set {
                this.polygonsField = value;
                this.RaisePropertyChanged("Polygons");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public int[] HighlightedEntityIDs {
            get {
                return this.highlightedEntityIDsField;
            }
            set {
                this.highlightedEntityIDsField = value;
                this.RaisePropertyChanged("HighlightedEntityIDs");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public string[] HideEntityTypes {
            get {
                return this.hideEntityTypesField;
            }
            set {
                this.hideEntityTypesField = value;
                this.RaisePropertyChanged("HideEntityTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public MapOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=5)]
        public Pushpin[] Pushpins {
            get {
                return this.pushpinsField;
            }
            set {
                this.pushpinsField = value;
                this.RaisePropertyChanged("Pushpins");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public Route Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
                this.RaisePropertyChanged("Route");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=7)]
        public MapView[] Views {
            get {
                return this.viewsField;
            }
            set {
                this.viewsField = value;
                this.RaisePropertyChanged("Views");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindPolygonSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        private SpatialFilter spatialFilterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
                this.RaisePropertyChanged("Filter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public SpatialFilter SpatialFilter {
            get {
                return this.spatialFilterField;
            }
            set {
                this.spatialFilterField = value;
                this.RaisePropertyChanged("SpatialFilter");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string entityTypeNameField;
        
        private string[] propertyNamesField;
        
        private WhereClause whereClauseField;
        
        private SortProperty[] sortPropertiesField;
        
        private FilterExpression expressionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EntityTypeName {
            get {
                return this.entityTypeNameField;
            }
            set {
                this.entityTypeNameField = value;
                this.RaisePropertyChanged("EntityTypeName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public string[] PropertyNames {
            get {
                return this.propertyNamesField;
            }
            set {
                this.propertyNamesField = value;
                this.RaisePropertyChanged("PropertyNames");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public WhereClause WhereClause {
            get {
                return this.whereClauseField;
            }
            set {
                this.whereClauseField = value;
                this.RaisePropertyChanged("WhereClause");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public SortProperty[] SortProperties {
            get {
                return this.sortPropertiesField;
            }
            set {
                this.sortPropertiesField = value;
                this.RaisePropertyChanged("SortProperties");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public FilterExpression Expression {
            get {
                return this.expressionField;
            }
            set {
                this.expressionField = value;
                this.RaisePropertyChanged("Expression");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class WhereClause : object, System.ComponentModel.INotifyPropertyChanged {
        
        private EntityPropertyValue[] searchPropertiesField;
        
        private SearchOperatorFlag searchOperatorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=0)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Property")]
        public EntityPropertyValue[] SearchProperties {
            get {
                return this.searchPropertiesField;
            }
            set {
                this.searchPropertiesField = value;
                this.RaisePropertyChanged("SearchProperties");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SearchOperatorFlag SearchOperator {
            get {
                return this.searchOperatorField;
            }
            set {
                this.searchOperatorField = value;
                this.RaisePropertyChanged("SearchOperator");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SearchOperatorFlag {
        
        /// <remarks/>
        And,
        
        /// <remarks/>
        Or,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class SortProperty : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string propertyNameField;
        
        private SortDirection directionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string PropertyName {
            get {
                return this.propertyNameField;
            }
            set {
                this.propertyNameField = value;
                this.RaisePropertyChanged("PropertyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SortDirection Direction {
            get {
                return this.directionField;
            }
            set {
                this.directionField = value;
                this.RaisePropertyChanged("Direction");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SortDirection {
        
        /// <remarks/>
        Ascending,
        
        /// <remarks/>
        Descending,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FilterExpression : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string textField;
        
        private object[] parametersField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Text {
            get {
                return this.textField;
            }
            set {
                this.textField = value;
                this.RaisePropertyChanged("Text");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        public object[] Parameters {
            get {
                return this.parametersField;
            }
            set {
                this.parametersField = value;
                this.RaisePropertyChanged("Parameters");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private FindRange rangeField;
        
        private int searchContextField;
        
        private FindResultMask resultMaskField;
        
        private double thresholdScoreField;
        
        public FindOptions() {
            this.thresholdScoreField = 0.85;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public FindRange Range {
            get {
                return this.rangeField;
            }
            set {
                this.rangeField = value;
                this.RaisePropertyChanged("Range");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int SearchContext {
            get {
                return this.searchContextField;
            }
            set {
                this.searchContextField = value;
                this.RaisePropertyChanged("SearchContext");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FindResultMask ResultMask {
            get {
                return this.resultMaskField;
            }
            set {
                this.resultMaskField = value;
                this.RaisePropertyChanged("ResultMask");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DefaultValueAttribute(0.85)]
        public double ThresholdScore {
            get {
                return this.thresholdScoreField;
            }
            set {
                this.thresholdScoreField = value;
                this.RaisePropertyChanged("ThresholdScore");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindRange : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int startIndexField;
        
        private int countField;
        
        public FindRange() {
            this.startIndexField = 0;
            this.countField = 25;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
                this.RaisePropertyChanged("StartIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(25)]
        public int Count {
            get {
                return this.countField;
            }
            set {
                this.countField = value;
                this.RaisePropertyChanged("Count");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum FindResultMask {
        
        /// <remarks/>
        LatLongFlag = 1,
        
        /// <remarks/>
        EntityFlag = 2,
        
        /// <remarks/>
        AddressFlag = 4,
        
        /// <remarks/>
        BestMapViewFlag = 8,
        
        /// <remarks/>
        MatchDetailsFlag = 16,
        
        /// <remarks/>
        RooftopFlag = 32,
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LatLongRectangleSpatialFilter))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(LatLongSpatialFilter))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public abstract partial class SpatialFilter : object, System.ComponentModel.INotifyPropertyChanged {
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLongRectangleSpatialFilter : SpatialFilter {
        
        private LatLongRectangle boundingRectangleField;
        
        private SpatialRelation polygonRectangleRelationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LatLongRectangle BoundingRectangle {
            get {
                return this.boundingRectangleField;
            }
            set {
                this.boundingRectangleField = value;
                this.RaisePropertyChanged("BoundingRectangle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SpatialRelation PolygonRectangleRelation {
            get {
                return this.polygonRectangleRelationField;
            }
            set {
                this.polygonRectangleRelationField = value;
                this.RaisePropertyChanged("PolygonRectangleRelation");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum SpatialRelation {
        
        /// <remarks/>
        WithinArea,
        
        /// <remarks/>
        TouchesArea,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class LatLongSpatialFilter : SpatialFilter {
        
        private LatLong latLongField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
                this.RaisePropertyChanged("LatLong");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindNearRouteSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private double distanceField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        private Route routeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("Distance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
                this.RaisePropertyChanged("Filter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public Route Route {
            get {
                return this.routeField;
            }
            set {
                this.routeField = value;
                this.RaisePropertyChanged("Route");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindByIDSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        private int[] entityIDsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
                this.RaisePropertyChanged("Filter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=3)]
        public int[] EntityIDs {
            get {
                return this.entityIDsField;
            }
            set {
                this.entityIDsField = value;
                this.RaisePropertyChanged("EntityIDs");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindByPropertySpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
                this.RaisePropertyChanged("Filter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindNearbySpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private LatLong latLongField;
        
        private double distanceField;
        
        private FindFilter filterField;
        
        private FindOptions optionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
                this.RaisePropertyChanged("LatLong");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public double Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
                this.RaisePropertyChanged("Distance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public FindFilter Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
                this.RaisePropertyChanged("Filter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class GetInfoOptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private bool includeAddressesField;
        
        private bool includeAllEntityTypesField;
        
        private string[] entityTypesToReturnField;
        
        public GetInfoOptions() {
            this.includeAddressesField = true;
            this.includeAllEntityTypesField = true;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IncludeAddresses {
            get {
                return this.includeAddressesField;
            }
            set {
                this.includeAddressesField = value;
                this.RaisePropertyChanged("IncludeAddresses");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(true)]
        public bool IncludeAllEntityTypes {
            get {
                return this.includeAllEntityTypesField;
            }
            set {
                this.includeAllEntityTypesField = value;
                this.RaisePropertyChanged("IncludeAllEntityTypes");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] EntityTypesToReturn {
            get {
                return this.entityTypesToReturnField;
            }
            set {
                this.entityTypesToReturnField = value;
                this.RaisePropertyChanged("EntityTypesToReturn");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindAddressSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private Address inputAddressField;
        
        private FindOptions optionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Address InputAddress {
            get {
                return this.inputAddressField;
            }
            set {
                this.inputAddressField = value;
                this.RaisePropertyChanged("InputAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class MapPointConstants : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double earthRadiusInKilometersField;
        
        private double piField;
        
        private double radiansPerDegreeField;
        
        private double degreesPerRadianField;
        
        private double milesPerKilometerField;
        
        private double kilometersPerMileField;
        
        private double kilometersPerFootField;
        
        private double feetPerKilometerField;
        
        private double findScoreThresholdField;
        
        private int assumedDpiField;
        
        private double feetPerMeterField;
        
        private double metersPerFootField;
        
        public MapPointConstants() {
            this.earthRadiusInKilometersField = 6378.2;
            this.piField = 3.1415926535897931;
            this.radiansPerDegreeField = 0.017453292519943295;
            this.degreesPerRadianField = 57.295779513082323;
            this.milesPerKilometerField = 0.621371192237334;
            this.kilometersPerMileField = 1.609344;
            this.kilometersPerFootField = 0.0003048;
            this.feetPerKilometerField = 3280.8398950131232;
            this.findScoreThresholdField = 0.85;
            this.assumedDpiField = 96;
            this.feetPerMeterField = 3.280839895013123;
            this.metersPerFootField = 0.3048;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(6378.2)]
        public double EarthRadiusInKilometers {
            get {
                return this.earthRadiusInKilometersField;
            }
            set {
                this.earthRadiusInKilometersField = value;
                this.RaisePropertyChanged("EarthRadiusInKilometers");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.ComponentModel.DefaultValueAttribute(3.1415926535897931)]
        public double Pi {
            get {
                return this.piField;
            }
            set {
                this.piField = value;
                this.RaisePropertyChanged("Pi");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.ComponentModel.DefaultValueAttribute(0.017453292519943295)]
        public double RadiansPerDegree {
            get {
                return this.radiansPerDegreeField;
            }
            set {
                this.radiansPerDegreeField = value;
                this.RaisePropertyChanged("RadiansPerDegree");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        [System.ComponentModel.DefaultValueAttribute(57.295779513082323)]
        public double DegreesPerRadian {
            get {
                return this.degreesPerRadianField;
            }
            set {
                this.degreesPerRadianField = value;
                this.RaisePropertyChanged("DegreesPerRadian");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        [System.ComponentModel.DefaultValueAttribute(0.621371192237334)]
        public double MilesPerKilometer {
            get {
                return this.milesPerKilometerField;
            }
            set {
                this.milesPerKilometerField = value;
                this.RaisePropertyChanged("MilesPerKilometer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        [System.ComponentModel.DefaultValueAttribute(1.609344)]
        public double KilometersPerMile {
            get {
                return this.kilometersPerMileField;
            }
            set {
                this.kilometersPerMileField = value;
                this.RaisePropertyChanged("KilometersPerMile");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        [System.ComponentModel.DefaultValueAttribute(0.0003048)]
        public double KilometersPerFoot {
            get {
                return this.kilometersPerFootField;
            }
            set {
                this.kilometersPerFootField = value;
                this.RaisePropertyChanged("KilometersPerFoot");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        [System.ComponentModel.DefaultValueAttribute(3280.8398950131232)]
        public double FeetPerKilometer {
            get {
                return this.feetPerKilometerField;
            }
            set {
                this.feetPerKilometerField = value;
                this.RaisePropertyChanged("FeetPerKilometer");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        [System.ComponentModel.DefaultValueAttribute(0.85)]
        public double FindScoreThreshold {
            get {
                return this.findScoreThresholdField;
            }
            set {
                this.findScoreThresholdField = value;
                this.RaisePropertyChanged("FindScoreThreshold");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=9)]
        [System.ComponentModel.DefaultValueAttribute(96)]
        public int AssumedDpi {
            get {
                return this.assumedDpiField;
            }
            set {
                this.assumedDpiField = value;
                this.RaisePropertyChanged("AssumedDpi");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=10)]
        [System.ComponentModel.DefaultValueAttribute(3.280839895013123)]
        public double FeetPerMeter {
            get {
                return this.feetPerMeterField;
            }
            set {
                this.feetPerMeterField = value;
                this.RaisePropertyChanged("FeetPerMeter");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=11)]
        [System.ComponentModel.DefaultValueAttribute(0.3048)]
        public double MetersPerFoot {
            get {
                return this.metersPerFootField;
            }
            set {
                this.metersPerFootField = value;
                this.RaisePropertyChanged("MetersPerFoot");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private double scoreField;
        
        private Location foundLocationField;
        
        private Location bestViewableLocationField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public double Score {
            get {
                return this.scoreField;
            }
            set {
                this.scoreField = value;
                this.RaisePropertyChanged("Score");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public Location FoundLocation {
            get {
                return this.foundLocationField;
            }
            set {
                this.foundLocationField = value;
                this.RaisePropertyChanged("FoundLocation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public Location BestViewableLocation {
            get {
                return this.bestViewableLocationField;
            }
            set {
                this.bestViewableLocationField = value;
                this.RaisePropertyChanged("BestViewableLocation");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindResults : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int numberFoundField;
        
        private int startIndexField;
        
        private FindResult[] resultsField;
        
        private double topScoreField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int NumberFound {
            get {
                return this.numberFoundField;
            }
            set {
                this.numberFoundField = value;
                this.RaisePropertyChanged("NumberFound");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int StartIndex {
            get {
                return this.startIndexField;
            }
            set {
                this.startIndexField = value;
                this.RaisePropertyChanged("StartIndex");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public FindResult[] Results {
            get {
                return this.resultsField;
            }
            set {
                this.resultsField = value;
                this.RaisePropertyChanged("Results");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public double TopScore {
            get {
                return this.topScoreField;
            }
            set {
                this.topScoreField = value;
                this.RaisePropertyChanged("TopScore");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class FindSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string dataSourceNameField;
        
        private string inputPlaceField;
        
        private string[] entityTypeNamesField;
        
        private FindOptions optionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string DataSourceName {
            get {
                return this.dataSourceNameField;
            }
            set {
                this.dataSourceNameField = value;
                this.RaisePropertyChanged("DataSourceName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string InputPlace {
            get {
                return this.inputPlaceField;
            }
            set {
                this.inputPlaceField = value;
                this.RaisePropertyChanged("InputPlace");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=2)]
        public string[] EntityTypeNames {
            get {
                return this.entityTypeNamesField;
            }
            set {
                this.entityTypeNamesField = value;
                this.RaisePropertyChanged("EntityTypeNames");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public FindOptions Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
                this.RaisePropertyChanged("Options");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class TokenSpecification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string clientIPAddressField;
        
        private int tokenValidityDurationMinutesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ClientIPAddress {
            get {
                return this.clientIPAddressField;
            }
            set {
                this.clientIPAddressField = value;
                this.RaisePropertyChanged("ClientIPAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int TokenValidityDurationMinutes {
            get {
                return this.tokenValidityDurationMinutesField;
            }
            set {
                this.tokenValidityDurationMinutesField = value;
                this.RaisePropertyChanged("TokenValidityDurationMinutes");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class DataSource : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string versionField;
        
        private string descriptionField;
        
        private DataSourceCapability capabilityField;
        
        private int[] entityExtentField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
                this.RaisePropertyChanged("Description");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public DataSourceCapability Capability {
            get {
                return this.capabilityField;
            }
            set {
                this.capabilityField = value;
                this.RaisePropertyChanged("Capability");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        public int[] EntityExtent {
            get {
                return this.entityExtentField;
            }
            set {
                this.entityExtentField = value;
                this.RaisePropertyChanged("EntityExtent");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.FlagsAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DataSourceCapability {
        
        /// <remarks/>
        CanDrawMaps = 1,
        
        /// <remarks/>
        CanFindPlaces = 2,
        
        /// <remarks/>
        CanFindNearby = 4,
        
        /// <remarks/>
        CanRoute = 8,
        
        /// <remarks/>
        CanFindAddress = 16,
        
        /// <remarks/>
        HasIcons = 32,
        
        /// <remarks/>
        DataServiceQuery = 64,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityProperty : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string displayNameField;
        
        private string dataTypeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("DisplayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string DataType {
            get {
                return this.dataTypeField;
            }
            set {
                this.dataTypeField = value;
                this.RaisePropertyChanged("DataType");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class EntityType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private string displayNameField;
        
        private string parentNameField;
        
        private string definitionField;
        
        private EntityProperty[] propertiesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string DisplayName {
            get {
                return this.displayNameField;
            }
            set {
                this.displayNameField = value;
                this.RaisePropertyChanged("DisplayName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string ParentName {
            get {
                return this.parentNameField;
            }
            set {
                this.parentNameField = value;
                this.RaisePropertyChanged("ParentName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Definition {
            get {
                return this.definitionField;
            }
            set {
                this.definitionField = value;
                this.RaisePropertyChanged("Definition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=4)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Property")]
        public EntityProperty[] Properties {
            get {
                return this.propertiesField;
            }
            set {
                this.propertiesField = value;
                this.RaisePropertyChanged("Properties");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CountryRegionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int entityIDField;
        
        private LatLong latLongField;
        
        private string iso2Field;
        
        private string iso3Field;
        
        private string friendlyNameField;
        
        private string officialNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
                this.RaisePropertyChanged("EntityID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public LatLong LatLong {
            get {
                return this.latLongField;
            }
            set {
                this.latLongField = value;
                this.RaisePropertyChanged("LatLong");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string Iso2 {
            get {
                return this.iso2Field;
            }
            set {
                this.iso2Field = value;
                this.RaisePropertyChanged("Iso2");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Iso3 {
            get {
                return this.iso3Field;
            }
            set {
                this.iso3Field = value;
                this.RaisePropertyChanged("Iso3");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string FriendlyName {
            get {
                return this.friendlyNameField;
            }
            set {
                this.friendlyNameField = value;
                this.RaisePropertyChanged("FriendlyName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string OfficialName {
            get {
                return this.officialNameField;
            }
            set {
                this.officialNameField = value;
                this.RaisePropertyChanged("OfficialName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CountryRegionContext : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int entityIDField;
        
        private string iso2Field;
        
        public CountryRegionContext() {
            this.entityIDField = 0;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        [System.ComponentModel.DefaultValueAttribute(0)]
        public int EntityID {
            get {
                return this.entityIDField;
            }
            set {
                this.entityIDField = value;
                this.RaisePropertyChanged("EntityID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Iso2 {
            get {
                return this.iso2Field;
            }
            set {
                this.iso2Field = value;
                this.RaisePropertyChanged("Iso2");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CultureInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string nameField;
        
        private int lcidField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public int Lcid {
            get {
                return this.lcidField;
            }
            set {
                this.lcidField = value;
                this.RaisePropertyChanged("Lcid");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserInfoRenderHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserInfoRouteHeader))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserInfoFindHeader))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class UserInfoHeader : object, System.ComponentModel.INotifyPropertyChanged {
        
        private CultureInfo cultureField;
        
        private DistanceUnit defaultDistanceUnitField;
        
        private CountryRegionContext contextField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public CultureInfo Culture {
            get {
                return this.cultureField;
            }
            set {
                this.cultureField = value;
                this.RaisePropertyChanged("Culture");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public DistanceUnit DefaultDistanceUnit {
            get {
                return this.defaultDistanceUnitField;
            }
            set {
                this.defaultDistanceUnitField = value;
                this.RaisePropertyChanged("DefaultDistanceUnit");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public CountryRegionContext Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public enum DistanceUnit {
        
        /// <remarks/>
        Kilometer,
        
        /// <remarks/>
        Mile,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class UserInfoRenderHeader : UserInfoHeader {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class UserInfoRouteHeader : UserInfoHeader {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class UserInfoFindHeader : UserInfoHeader {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class VersionInfo : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string componentField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string Component {
            get {
                return this.componentField;
            }
            set {
                this.componentField = value;
                this.RaisePropertyChanged("Component");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
                this.RaisePropertyChanged("Version");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CustomerInfoRenderHeader : CustomerInfoHeader {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CustomerInfoRouteHeader : CustomerInfoHeader {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.4927")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
    public partial class CustomerInfoFindHeader : CustomerInfoHeader {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersionInfo", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetVersionInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader;
        
        public GetVersionInfoRequest() {
        }
        
        public GetVersionInfoRequest(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetVersionInfoResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetVersionInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public VersionInfo[] GetVersionInfoResult;
        
        public GetVersionInfoResponse() {
        }
        
        public GetVersionInfoResponse(VersionInfo[] GetVersionInfoResult) {
            this.GetVersionInfoResult = GetVersionInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountryRegionInfo", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetCountryRegionInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public int[] entityIDs;
        
        public GetCountryRegionInfoRequest() {
        }
        
        public GetCountryRegionInfoRequest(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, int[] entityIDs) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.entityIDs = entityIDs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetCountryRegionInfoResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetCountryRegionInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public CountryRegionInfo[] GetCountryRegionInfoResult;
        
        public GetCountryRegionInfoResponse() {
        }
        
        public GetCountryRegionInfoResponse(CountryRegionInfo[] GetCountryRegionInfoResult) {
            this.GetCountryRegionInfoResult = GetCountryRegionInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEntityTypes", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetEntityTypesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public string dataSourceName;
        
        public GetEntityTypesRequest() {
        }
        
        public GetEntityTypesRequest(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, string dataSourceName) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.dataSourceName = dataSourceName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetEntityTypesResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetEntityTypesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public EntityType[] GetEntityTypesResult;
        
        public GetEntityTypesResponse() {
        }
        
        public GetEntityTypesResponse(EntityType[] GetEntityTypesResult) {
            this.GetEntityTypesResult = GetEntityTypesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataSourceInfo", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetDataSourceInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public string[] dataSourceNames;
        
        public GetDataSourceInfoRequest() {
        }
        
        public GetDataSourceInfoRequest(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, string[] dataSourceNames) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.dataSourceNames = dataSourceNames;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetDataSourceInfoResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetDataSourceInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public DataSource[] GetDataSourceInfoResult;
        
        public GetDataSourceInfoResponse() {
        }
        
        public GetDataSourceInfoResponse(DataSource[] GetDataSourceInfoResult) {
            this.GetDataSourceInfoResult = GetDataSourceInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGreatCircleDistances", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetGreatCircleDistancesRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public LatLong[] latLongs;
        
        public GetGreatCircleDistancesRequest() {
        }
        
        public GetGreatCircleDistancesRequest(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, LatLong[] latLongs) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.latLongs = latLongs;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetGreatCircleDistancesResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetGreatCircleDistancesResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public double[] GetGreatCircleDistancesResult;
        
        public GetGreatCircleDistancesResponse() {
        }
        
        public GetGreatCircleDistancesResponse(double[] GetGreatCircleDistancesResult) {
            this.GetGreatCircleDistancesResult = GetGreatCircleDistancesResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClientToken", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetClientTokenRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.TokenSpecification specification;
        
        public GetClientTokenRequest() {
        }
        
        public GetClientTokenRequest(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, FotoFly.BingMapsForEnterprise.TokenSpecification specification) {
            this.CustomerInfoHeader = CustomerInfoHeader;
            this.UserInfoHeader = UserInfoHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetClientTokenResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetClientTokenResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public string GetClientTokenResult;
        
        public GetClientTokenResponse() {
        }
        
        public GetClientTokenResponse(string GetClientTokenResult) {
            this.GetClientTokenResult = GetClientTokenResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface CommonServiceSoapChannel : FotoFly.BingMapsForEnterprise.CommonServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class CommonServiceSoapClient : System.ServiceModel.ClientBase<FotoFly.BingMapsForEnterprise.CommonServiceSoap>, FotoFly.BingMapsForEnterprise.CommonServiceSoap {
        
        public CommonServiceSoapClient() {
        }
        
        public CommonServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CommonServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CommonServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetVersionInfoResponse FotoFly.BingMapsForEnterprise.CommonServiceSoap.GetVersionInfo(FotoFly.BingMapsForEnterprise.GetVersionInfoRequest request) {
            return base.Channel.GetVersionInfo(request);
        }
        
        public VersionInfo[] GetVersionInfo(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader) {
            FotoFly.BingMapsForEnterprise.GetVersionInfoRequest inValue = new FotoFly.BingMapsForEnterprise.GetVersionInfoRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            FotoFly.BingMapsForEnterprise.GetVersionInfoResponse retVal = ((FotoFly.BingMapsForEnterprise.CommonServiceSoap)(this)).GetVersionInfo(inValue);
            return retVal.GetVersionInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetCountryRegionInfoResponse FotoFly.BingMapsForEnterprise.CommonServiceSoap.GetCountryRegionInfo(FotoFly.BingMapsForEnterprise.GetCountryRegionInfoRequest request) {
            return base.Channel.GetCountryRegionInfo(request);
        }
        
        public CountryRegionInfo[] GetCountryRegionInfo(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, int[] entityIDs) {
            FotoFly.BingMapsForEnterprise.GetCountryRegionInfoRequest inValue = new FotoFly.BingMapsForEnterprise.GetCountryRegionInfoRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.entityIDs = entityIDs;
            FotoFly.BingMapsForEnterprise.GetCountryRegionInfoResponse retVal = ((FotoFly.BingMapsForEnterprise.CommonServiceSoap)(this)).GetCountryRegionInfo(inValue);
            return retVal.GetCountryRegionInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetEntityTypesResponse FotoFly.BingMapsForEnterprise.CommonServiceSoap.GetEntityTypes(FotoFly.BingMapsForEnterprise.GetEntityTypesRequest request) {
            return base.Channel.GetEntityTypes(request);
        }
        
        public EntityType[] GetEntityTypes(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, string dataSourceName) {
            FotoFly.BingMapsForEnterprise.GetEntityTypesRequest inValue = new FotoFly.BingMapsForEnterprise.GetEntityTypesRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.dataSourceName = dataSourceName;
            FotoFly.BingMapsForEnterprise.GetEntityTypesResponse retVal = ((FotoFly.BingMapsForEnterprise.CommonServiceSoap)(this)).GetEntityTypes(inValue);
            return retVal.GetEntityTypesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetDataSourceInfoResponse FotoFly.BingMapsForEnterprise.CommonServiceSoap.GetDataSourceInfo(FotoFly.BingMapsForEnterprise.GetDataSourceInfoRequest request) {
            return base.Channel.GetDataSourceInfo(request);
        }
        
        public DataSource[] GetDataSourceInfo(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, string[] dataSourceNames) {
            FotoFly.BingMapsForEnterprise.GetDataSourceInfoRequest inValue = new FotoFly.BingMapsForEnterprise.GetDataSourceInfoRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.dataSourceNames = dataSourceNames;
            FotoFly.BingMapsForEnterprise.GetDataSourceInfoResponse retVal = ((FotoFly.BingMapsForEnterprise.CommonServiceSoap)(this)).GetDataSourceInfo(inValue);
            return retVal.GetDataSourceInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetGreatCircleDistancesResponse FotoFly.BingMapsForEnterprise.CommonServiceSoap.GetGreatCircleDistances(FotoFly.BingMapsForEnterprise.GetGreatCircleDistancesRequest request) {
            return base.Channel.GetGreatCircleDistances(request);
        }
        
        public double[] GetGreatCircleDistances(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, LatLong[] latLongs) {
            FotoFly.BingMapsForEnterprise.GetGreatCircleDistancesRequest inValue = new FotoFly.BingMapsForEnterprise.GetGreatCircleDistancesRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.latLongs = latLongs;
            FotoFly.BingMapsForEnterprise.GetGreatCircleDistancesResponse retVal = ((FotoFly.BingMapsForEnterprise.CommonServiceSoap)(this)).GetGreatCircleDistances(inValue);
            return retVal.GetGreatCircleDistancesResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetClientTokenResponse FotoFly.BingMapsForEnterprise.CommonServiceSoap.GetClientToken(FotoFly.BingMapsForEnterprise.GetClientTokenRequest request) {
            return base.Channel.GetClientToken(request);
        }
        
        public string GetClientToken(FotoFly.BingMapsForEnterprise.CustomerInfoHeader CustomerInfoHeader, FotoFly.BingMapsForEnterprise.UserInfoHeader UserInfoHeader, FotoFly.BingMapsForEnterprise.TokenSpecification specification) {
            FotoFly.BingMapsForEnterprise.GetClientTokenRequest inValue = new FotoFly.BingMapsForEnterprise.GetClientTokenRequest();
            inValue.CustomerInfoHeader = CustomerInfoHeader;
            inValue.UserInfoHeader = UserInfoHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.GetClientTokenResponse retVal = ((FotoFly.BingMapsForEnterprise.CommonServiceSoap)(this)).GetClientToken(inValue);
            return retVal.GetClientTokenResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://s.mappoint.net/mappoint-30/", ConfigurationName="BingMapsForEnterprise.FindServiceSoap")]
    public interface FindServiceSoap {
        
        // CODEGEN: Generating message contract since message FindRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/Find", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.FindResponse Find(FotoFly.BingMapsForEnterprise.FindRequest request);
        
        // CODEGEN: Generating message contract since message FindAddressRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/FindAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.FindAddressResponse FindAddress(FotoFly.BingMapsForEnterprise.FindAddressRequest request);
        
        // CODEGEN: Generating message contract since message ParseAddressRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/ParseAddress", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.ParseAddressResponse ParseAddress(FotoFly.BingMapsForEnterprise.ParseAddressRequest request);
        
        // CODEGEN: Generating message contract since message GetLocationInfoRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetLocationInfo", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetLocationInfoResponse GetLocationInfo(FotoFly.BingMapsForEnterprise.GetLocationInfoRequest request);
        
        // CODEGEN: Generating message contract since message FindNearbyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/FindNearby", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.FindNearbyResponse FindNearby(FotoFly.BingMapsForEnterprise.FindNearbyRequest request);
        
        // CODEGEN: Generating message contract since message FindByPropertyRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/FindByProperty", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.FindByPropertyResponse FindByProperty(FotoFly.BingMapsForEnterprise.FindByPropertyRequest request);
        
        // CODEGEN: Generating message contract since message FindByIDRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/FindByID", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.FindByIDResponse FindByID(FotoFly.BingMapsForEnterprise.FindByIDRequest request);
        
        // CODEGEN: Generating message contract since message FindNearRouteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/FindNearRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.FindNearRouteResponse FindNearRoute(FotoFly.BingMapsForEnterprise.FindNearRouteRequest request);
        
        // CODEGEN: Generating message contract since message FindPolygonRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/FindPolygon", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.FindPolygonResponse FindPolygon(FotoFly.BingMapsForEnterprise.FindPolygonRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="Find", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindSpecification specification;
        
        public FindRequest() {
        }
        
        public FindRequest(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindSpecification specification) {
            this.CustomerInfoFindHeader = CustomerInfoFindHeader;
            this.UserInfoFindHeader = UserInfoFindHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindResults FindResult;
        
        public FindResponse() {
        }
        
        public FindResponse(FotoFly.BingMapsForEnterprise.FindResults FindResult) {
            this.FindResult = FindResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindAddress", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindAddressRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindAddressSpecification specification;
        
        public FindAddressRequest() {
        }
        
        public FindAddressRequest(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindAddressSpecification specification) {
            this.CustomerInfoFindHeader = CustomerInfoFindHeader;
            this.UserInfoFindHeader = UserInfoFindHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindAddressResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindResults FindAddressResult;
        
        public FindAddressResponse() {
        }
        
        public FindAddressResponse(FotoFly.BingMapsForEnterprise.FindResults FindAddressResult) {
            this.FindAddressResult = FindAddressResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ParseAddress", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class ParseAddressRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public string inputAddress;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=1)]
        public string countryRegion;
        
        public ParseAddressRequest() {
        }
        
        public ParseAddressRequest(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, string inputAddress, string countryRegion) {
            this.CustomerInfoFindHeader = CustomerInfoFindHeader;
            this.UserInfoFindHeader = UserInfoFindHeader;
            this.inputAddress = inputAddress;
            this.countryRegion = countryRegion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ParseAddressResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class ParseAddressResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.Address ParseAddressResult;
        
        public ParseAddressResponse() {
        }
        
        public ParseAddressResponse(FotoFly.BingMapsForEnterprise.Address ParseAddressResult) {
            this.ParseAddressResult = ParseAddressResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationInfo", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetLocationInfoRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.LatLong location;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=1)]
        public string dataSourceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=2)]
        public FotoFly.BingMapsForEnterprise.GetInfoOptions options;
        
        public GetLocationInfoRequest() {
        }
        
        public GetLocationInfoRequest(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.LatLong location, string dataSourceName, FotoFly.BingMapsForEnterprise.GetInfoOptions options) {
            this.CustomerInfoFindHeader = CustomerInfoFindHeader;
            this.UserInfoFindHeader = UserInfoFindHeader;
            this.location = location;
            this.dataSourceName = dataSourceName;
            this.options = options;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLocationInfoResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetLocationInfoResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public Location[] GetLocationInfoResult;
        
        public GetLocationInfoResponse() {
        }
        
        public GetLocationInfoResponse(Location[] GetLocationInfoResult) {
            this.GetLocationInfoResult = GetLocationInfoResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindNearby", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindNearbyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindNearbySpecification specification;
        
        public FindNearbyRequest() {
        }
        
        public FindNearbyRequest(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindNearbySpecification specification) {
            this.CustomerInfoFindHeader = CustomerInfoFindHeader;
            this.UserInfoFindHeader = UserInfoFindHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindNearbyResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindNearbyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindResults FindNearbyResult;
        
        public FindNearbyResponse() {
        }
        
        public FindNearbyResponse(FotoFly.BingMapsForEnterprise.FindResults FindNearbyResult) {
            this.FindNearbyResult = FindNearbyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindByProperty", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindByPropertyRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindByPropertySpecification specification;
        
        public FindByPropertyRequest() {
        }
        
        public FindByPropertyRequest(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindByPropertySpecification specification) {
            this.CustomerInfoFindHeader = CustomerInfoFindHeader;
            this.UserInfoFindHeader = UserInfoFindHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindByPropertyResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindByPropertyResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindResults FindByPropertyResult;
        
        public FindByPropertyResponse() {
        }
        
        public FindByPropertyResponse(FotoFly.BingMapsForEnterprise.FindResults FindByPropertyResult) {
            this.FindByPropertyResult = FindByPropertyResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindByID", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindByIDRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindByIDSpecification specification;
        
        public FindByIDRequest() {
        }
        
        public FindByIDRequest(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindByIDSpecification specification) {
            this.CustomerInfoFindHeader = CustomerInfoFindHeader;
            this.UserInfoFindHeader = UserInfoFindHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindByIDResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindByIDResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindResults FindByIDResult;
        
        public FindByIDResponse() {
        }
        
        public FindByIDResponse(FotoFly.BingMapsForEnterprise.FindResults FindByIDResult) {
            this.FindByIDResult = FindByIDResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindNearRoute", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindNearRouteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindNearRouteSpecification specification;
        
        public FindNearRouteRequest() {
        }
        
        public FindNearRouteRequest(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindNearRouteSpecification specification) {
            this.CustomerInfoFindHeader = CustomerInfoFindHeader;
            this.UserInfoFindHeader = UserInfoFindHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindNearRouteResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindNearRouteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindResults FindNearRouteResult;
        
        public FindNearRouteResponse() {
        }
        
        public FindNearRouteResponse(FotoFly.BingMapsForEnterprise.FindResults FindNearRouteResult) {
            this.FindNearRouteResult = FindNearRouteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindPolygon", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindPolygonRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindPolygonSpecification specification;
        
        public FindPolygonRequest() {
        }
        
        public FindPolygonRequest(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindPolygonSpecification specification) {
            this.CustomerInfoFindHeader = CustomerInfoFindHeader;
            this.UserInfoFindHeader = UserInfoFindHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="FindPolygonResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class FindPolygonResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.FindResults FindPolygonResult;
        
        public FindPolygonResponse() {
        }
        
        public FindPolygonResponse(FotoFly.BingMapsForEnterprise.FindResults FindPolygonResult) {
            this.FindPolygonResult = FindPolygonResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface FindServiceSoapChannel : FotoFly.BingMapsForEnterprise.FindServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class FindServiceSoapClient : System.ServiceModel.ClientBase<FotoFly.BingMapsForEnterprise.FindServiceSoap>, FotoFly.BingMapsForEnterprise.FindServiceSoap {
        
        public FindServiceSoapClient() {
        }
        
        public FindServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FindServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FindServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FindServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.FindResponse FotoFly.BingMapsForEnterprise.FindServiceSoap.Find(FotoFly.BingMapsForEnterprise.FindRequest request) {
            return base.Channel.Find(request);
        }
        
        public FotoFly.BingMapsForEnterprise.FindResults Find(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindSpecification specification) {
            FotoFly.BingMapsForEnterprise.FindRequest inValue = new FotoFly.BingMapsForEnterprise.FindRequest();
            inValue.CustomerInfoFindHeader = CustomerInfoFindHeader;
            inValue.UserInfoFindHeader = UserInfoFindHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.FindResponse retVal = ((FotoFly.BingMapsForEnterprise.FindServiceSoap)(this)).Find(inValue);
            return retVal.FindResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.FindAddressResponse FotoFly.BingMapsForEnterprise.FindServiceSoap.FindAddress(FotoFly.BingMapsForEnterprise.FindAddressRequest request) {
            return base.Channel.FindAddress(request);
        }
        
        public FotoFly.BingMapsForEnterprise.FindResults FindAddress(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindAddressSpecification specification) {
            FotoFly.BingMapsForEnterprise.FindAddressRequest inValue = new FotoFly.BingMapsForEnterprise.FindAddressRequest();
            inValue.CustomerInfoFindHeader = CustomerInfoFindHeader;
            inValue.UserInfoFindHeader = UserInfoFindHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.FindAddressResponse retVal = ((FotoFly.BingMapsForEnterprise.FindServiceSoap)(this)).FindAddress(inValue);
            return retVal.FindAddressResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.ParseAddressResponse FotoFly.BingMapsForEnterprise.FindServiceSoap.ParseAddress(FotoFly.BingMapsForEnterprise.ParseAddressRequest request) {
            return base.Channel.ParseAddress(request);
        }
        
        public FotoFly.BingMapsForEnterprise.Address ParseAddress(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, string inputAddress, string countryRegion) {
            FotoFly.BingMapsForEnterprise.ParseAddressRequest inValue = new FotoFly.BingMapsForEnterprise.ParseAddressRequest();
            inValue.CustomerInfoFindHeader = CustomerInfoFindHeader;
            inValue.UserInfoFindHeader = UserInfoFindHeader;
            inValue.inputAddress = inputAddress;
            inValue.countryRegion = countryRegion;
            FotoFly.BingMapsForEnterprise.ParseAddressResponse retVal = ((FotoFly.BingMapsForEnterprise.FindServiceSoap)(this)).ParseAddress(inValue);
            return retVal.ParseAddressResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetLocationInfoResponse FotoFly.BingMapsForEnterprise.FindServiceSoap.GetLocationInfo(FotoFly.BingMapsForEnterprise.GetLocationInfoRequest request) {
            return base.Channel.GetLocationInfo(request);
        }
        
        public Location[] GetLocationInfo(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.LatLong location, string dataSourceName, FotoFly.BingMapsForEnterprise.GetInfoOptions options) {
            FotoFly.BingMapsForEnterprise.GetLocationInfoRequest inValue = new FotoFly.BingMapsForEnterprise.GetLocationInfoRequest();
            inValue.CustomerInfoFindHeader = CustomerInfoFindHeader;
            inValue.UserInfoFindHeader = UserInfoFindHeader;
            inValue.location = location;
            inValue.dataSourceName = dataSourceName;
            inValue.options = options;
            FotoFly.BingMapsForEnterprise.GetLocationInfoResponse retVal = ((FotoFly.BingMapsForEnterprise.FindServiceSoap)(this)).GetLocationInfo(inValue);
            return retVal.GetLocationInfoResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.FindNearbyResponse FotoFly.BingMapsForEnterprise.FindServiceSoap.FindNearby(FotoFly.BingMapsForEnterprise.FindNearbyRequest request) {
            return base.Channel.FindNearby(request);
        }
        
        public FotoFly.BingMapsForEnterprise.FindResults FindNearby(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindNearbySpecification specification) {
            FotoFly.BingMapsForEnterprise.FindNearbyRequest inValue = new FotoFly.BingMapsForEnterprise.FindNearbyRequest();
            inValue.CustomerInfoFindHeader = CustomerInfoFindHeader;
            inValue.UserInfoFindHeader = UserInfoFindHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.FindNearbyResponse retVal = ((FotoFly.BingMapsForEnterprise.FindServiceSoap)(this)).FindNearby(inValue);
            return retVal.FindNearbyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.FindByPropertyResponse FotoFly.BingMapsForEnterprise.FindServiceSoap.FindByProperty(FotoFly.BingMapsForEnterprise.FindByPropertyRequest request) {
            return base.Channel.FindByProperty(request);
        }
        
        public FotoFly.BingMapsForEnterprise.FindResults FindByProperty(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindByPropertySpecification specification) {
            FotoFly.BingMapsForEnterprise.FindByPropertyRequest inValue = new FotoFly.BingMapsForEnterprise.FindByPropertyRequest();
            inValue.CustomerInfoFindHeader = CustomerInfoFindHeader;
            inValue.UserInfoFindHeader = UserInfoFindHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.FindByPropertyResponse retVal = ((FotoFly.BingMapsForEnterprise.FindServiceSoap)(this)).FindByProperty(inValue);
            return retVal.FindByPropertyResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.FindByIDResponse FotoFly.BingMapsForEnterprise.FindServiceSoap.FindByID(FotoFly.BingMapsForEnterprise.FindByIDRequest request) {
            return base.Channel.FindByID(request);
        }
        
        public FotoFly.BingMapsForEnterprise.FindResults FindByID(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindByIDSpecification specification) {
            FotoFly.BingMapsForEnterprise.FindByIDRequest inValue = new FotoFly.BingMapsForEnterprise.FindByIDRequest();
            inValue.CustomerInfoFindHeader = CustomerInfoFindHeader;
            inValue.UserInfoFindHeader = UserInfoFindHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.FindByIDResponse retVal = ((FotoFly.BingMapsForEnterprise.FindServiceSoap)(this)).FindByID(inValue);
            return retVal.FindByIDResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.FindNearRouteResponse FotoFly.BingMapsForEnterprise.FindServiceSoap.FindNearRoute(FotoFly.BingMapsForEnterprise.FindNearRouteRequest request) {
            return base.Channel.FindNearRoute(request);
        }
        
        public FotoFly.BingMapsForEnterprise.FindResults FindNearRoute(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindNearRouteSpecification specification) {
            FotoFly.BingMapsForEnterprise.FindNearRouteRequest inValue = new FotoFly.BingMapsForEnterprise.FindNearRouteRequest();
            inValue.CustomerInfoFindHeader = CustomerInfoFindHeader;
            inValue.UserInfoFindHeader = UserInfoFindHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.FindNearRouteResponse retVal = ((FotoFly.BingMapsForEnterprise.FindServiceSoap)(this)).FindNearRoute(inValue);
            return retVal.FindNearRouteResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.FindPolygonResponse FotoFly.BingMapsForEnterprise.FindServiceSoap.FindPolygon(FotoFly.BingMapsForEnterprise.FindPolygonRequest request) {
            return base.Channel.FindPolygon(request);
        }
        
        public FotoFly.BingMapsForEnterprise.FindResults FindPolygon(FotoFly.BingMapsForEnterprise.CustomerInfoFindHeader CustomerInfoFindHeader, FotoFly.BingMapsForEnterprise.UserInfoFindHeader UserInfoFindHeader, FotoFly.BingMapsForEnterprise.FindPolygonSpecification specification) {
            FotoFly.BingMapsForEnterprise.FindPolygonRequest inValue = new FotoFly.BingMapsForEnterprise.FindPolygonRequest();
            inValue.CustomerInfoFindHeader = CustomerInfoFindHeader;
            inValue.UserInfoFindHeader = UserInfoFindHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.FindPolygonResponse retVal = ((FotoFly.BingMapsForEnterprise.FindServiceSoap)(this)).FindPolygon(inValue);
            return retVal.FindPolygonResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://s.mappoint.net/mappoint-30/", ConfigurationName="BingMapsForEnterprise.RouteServiceSoap")]
    public interface RouteServiceSoap {
        
        // CODEGEN: Generating message contract since message CalculateSimpleRouteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/CalculateSimpleRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.CalculateSimpleRouteResponse CalculateSimpleRoute(FotoFly.BingMapsForEnterprise.CalculateSimpleRouteRequest request);
        
        // CODEGEN: Generating message contract since message CalculateRouteRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/CalculateRoute", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.CalculateRouteResponse CalculateRoute(FotoFly.BingMapsForEnterprise.CalculateRouteRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateSimpleRoute", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class CalculateSimpleRouteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoRouteHeader CustomerInfoRouteHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoRouteHeader UserInfoRouteHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public LatLong[] latLongs;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=1)]
        public string dataSourceName;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=2)]
        public FotoFly.BingMapsForEnterprise.SegmentPreference preference;
        
        public CalculateSimpleRouteRequest() {
        }
        
        public CalculateSimpleRouteRequest(FotoFly.BingMapsForEnterprise.CustomerInfoRouteHeader CustomerInfoRouteHeader, FotoFly.BingMapsForEnterprise.UserInfoRouteHeader UserInfoRouteHeader, LatLong[] latLongs, string dataSourceName, FotoFly.BingMapsForEnterprise.SegmentPreference preference) {
            this.CustomerInfoRouteHeader = CustomerInfoRouteHeader;
            this.UserInfoRouteHeader = UserInfoRouteHeader;
            this.latLongs = latLongs;
            this.dataSourceName = dataSourceName;
            this.preference = preference;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateSimpleRouteResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class CalculateSimpleRouteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.Route CalculateSimpleRouteResult;
        
        public CalculateSimpleRouteResponse() {
        }
        
        public CalculateSimpleRouteResponse(FotoFly.BingMapsForEnterprise.Route CalculateSimpleRouteResult) {
            this.CalculateSimpleRouteResult = CalculateSimpleRouteResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateRoute", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class CalculateRouteRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoRouteHeader CustomerInfoRouteHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoRouteHeader UserInfoRouteHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.RouteSpecification specification;
        
        public CalculateRouteRequest() {
        }
        
        public CalculateRouteRequest(FotoFly.BingMapsForEnterprise.CustomerInfoRouteHeader CustomerInfoRouteHeader, FotoFly.BingMapsForEnterprise.UserInfoRouteHeader UserInfoRouteHeader, FotoFly.BingMapsForEnterprise.RouteSpecification specification) {
            this.CustomerInfoRouteHeader = CustomerInfoRouteHeader;
            this.UserInfoRouteHeader = UserInfoRouteHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="CalculateRouteResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class CalculateRouteResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.Route CalculateRouteResult;
        
        public CalculateRouteResponse() {
        }
        
        public CalculateRouteResponse(FotoFly.BingMapsForEnterprise.Route CalculateRouteResult) {
            this.CalculateRouteResult = CalculateRouteResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface RouteServiceSoapChannel : FotoFly.BingMapsForEnterprise.RouteServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class RouteServiceSoapClient : System.ServiceModel.ClientBase<FotoFly.BingMapsForEnterprise.RouteServiceSoap>, FotoFly.BingMapsForEnterprise.RouteServiceSoap {
        
        public RouteServiceSoapClient() {
        }
        
        public RouteServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RouteServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouteServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RouteServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.CalculateSimpleRouteResponse FotoFly.BingMapsForEnterprise.RouteServiceSoap.CalculateSimpleRoute(FotoFly.BingMapsForEnterprise.CalculateSimpleRouteRequest request) {
            return base.Channel.CalculateSimpleRoute(request);
        }
        
        public FotoFly.BingMapsForEnterprise.Route CalculateSimpleRoute(FotoFly.BingMapsForEnterprise.CustomerInfoRouteHeader CustomerInfoRouteHeader, FotoFly.BingMapsForEnterprise.UserInfoRouteHeader UserInfoRouteHeader, LatLong[] latLongs, string dataSourceName, FotoFly.BingMapsForEnterprise.SegmentPreference preference) {
            FotoFly.BingMapsForEnterprise.CalculateSimpleRouteRequest inValue = new FotoFly.BingMapsForEnterprise.CalculateSimpleRouteRequest();
            inValue.CustomerInfoRouteHeader = CustomerInfoRouteHeader;
            inValue.UserInfoRouteHeader = UserInfoRouteHeader;
            inValue.latLongs = latLongs;
            inValue.dataSourceName = dataSourceName;
            inValue.preference = preference;
            FotoFly.BingMapsForEnterprise.CalculateSimpleRouteResponse retVal = ((FotoFly.BingMapsForEnterprise.RouteServiceSoap)(this)).CalculateSimpleRoute(inValue);
            return retVal.CalculateSimpleRouteResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.CalculateRouteResponse FotoFly.BingMapsForEnterprise.RouteServiceSoap.CalculateRoute(FotoFly.BingMapsForEnterprise.CalculateRouteRequest request) {
            return base.Channel.CalculateRoute(request);
        }
        
        public FotoFly.BingMapsForEnterprise.Route CalculateRoute(FotoFly.BingMapsForEnterprise.CustomerInfoRouteHeader CustomerInfoRouteHeader, FotoFly.BingMapsForEnterprise.UserInfoRouteHeader UserInfoRouteHeader, FotoFly.BingMapsForEnterprise.RouteSpecification specification) {
            FotoFly.BingMapsForEnterprise.CalculateRouteRequest inValue = new FotoFly.BingMapsForEnterprise.CalculateRouteRequest();
            inValue.CustomerInfoRouteHeader = CustomerInfoRouteHeader;
            inValue.UserInfoRouteHeader = UserInfoRouteHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.CalculateRouteResponse retVal = ((FotoFly.BingMapsForEnterprise.RouteServiceSoap)(this)).CalculateRoute(inValue);
            return retVal.CalculateRouteResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://s.mappoint.net/mappoint-30/", ConfigurationName="BingMapsForEnterprise.RenderServiceSoap")]
    public interface RenderServiceSoap {
        
        // CODEGEN: Generating message contract since message GetMapRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetMapResponse GetMap(FotoFly.BingMapsForEnterprise.GetMapRequest request);
        
        // CODEGEN: Generating message contract since message ConvertToPointRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/ConvertToPoint", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.ConvertToPointResponse ConvertToPoint(FotoFly.BingMapsForEnterprise.ConvertToPointRequest request);
        
        // CODEGEN: Generating message contract since message ConvertToLatLongRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/ConvertToLatLong", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.ConvertToLatLongResponse ConvertToLatLong(FotoFly.BingMapsForEnterprise.ConvertToLatLongRequest request);
        
        // CODEGEN: Generating message contract since message GetBestMapViewRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetBestMapView", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetBestMapViewResponse GetBestMapView(FotoFly.BingMapsForEnterprise.GetBestMapViewRequest request);
        
        // CODEGEN: Generating message contract since message GetLineDriveMapRequest has headers
        [System.ServiceModel.OperationContractAttribute(Action="http://s.mappoint.net/mappoint-30/GetLineDriveMap", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute()]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(MapPointConstants))]
        [System.ServiceModel.ServiceKnownTypeAttribute(typeof(FindResult[]))]
        FotoFly.BingMapsForEnterprise.GetLineDriveMapResponse GetLineDriveMap(FotoFly.BingMapsForEnterprise.GetLineDriveMapRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMap", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetMapRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.MapSpecification specification;
        
        public GetMapRequest() {
        }
        
        public GetMapRequest(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, FotoFly.BingMapsForEnterprise.MapSpecification specification) {
            this.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            this.UserInfoRenderHeader = UserInfoRenderHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetMapResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetMapResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public MapImage[] GetMapResult;
        
        public GetMapResponse() {
        }
        
        public GetMapResponse(MapImage[] GetMapResult) {
            this.GetMapResult = GetMapResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertToPoint", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class ConvertToPointRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public LatLong[] latLong;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=1)]
        public FotoFly.BingMapsForEnterprise.MapView view;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=2)]
        public int width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=3)]
        public int height;
        
        public ConvertToPointRequest() {
        }
        
        public ConvertToPointRequest(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, LatLong[] latLong, FotoFly.BingMapsForEnterprise.MapView view, int width, int height) {
            this.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            this.UserInfoRenderHeader = UserInfoRenderHeader;
            this.latLong = latLong;
            this.view = view;
            this.width = width;
            this.height = height;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertToPointResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class ConvertToPointResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public PixelCoord[] ConvertToPointResult;
        
        public ConvertToPointResponse() {
        }
        
        public ConvertToPointResponse(PixelCoord[] ConvertToPointResult) {
            this.ConvertToPointResult = ConvertToPointResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertToLatLong", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class ConvertToLatLongRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public PixelCoord[] pixels;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=1)]
        public FotoFly.BingMapsForEnterprise.MapView view;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=2)]
        public int width;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=3)]
        public int height;
        
        public ConvertToLatLongRequest() {
        }
        
        public ConvertToLatLongRequest(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, PixelCoord[] pixels, FotoFly.BingMapsForEnterprise.MapView view, int width, int height) {
            this.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            this.UserInfoRenderHeader = UserInfoRenderHeader;
            this.pixels = pixels;
            this.view = view;
            this.width = width;
            this.height = height;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="ConvertToLatLongResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class ConvertToLatLongResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public LatLong[] ConvertToLatLongResult;
        
        public ConvertToLatLongResponse() {
        }
        
        public ConvertToLatLongResponse(LatLong[] ConvertToLatLongResult) {
            this.ConvertToLatLongResult = ConvertToLatLongResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBestMapView", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetBestMapViewRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public Location[] locations;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=1)]
        public string dataSourceName;
        
        public GetBestMapViewRequest() {
        }
        
        public GetBestMapViewRequest(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, Location[] locations, string dataSourceName) {
            this.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            this.UserInfoRenderHeader = UserInfoRenderHeader;
            this.locations = locations;
            this.dataSourceName = dataSourceName;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetBestMapViewResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetBestMapViewResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.MapViewRepresentations GetBestMapViewResult;
        
        public GetBestMapViewResponse() {
        }
        
        public GetBestMapViewResponse(FotoFly.BingMapsForEnterprise.MapViewRepresentations GetBestMapViewResult) {
            this.GetBestMapViewResult = GetBestMapViewResult;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLineDriveMap", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetLineDriveMapRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://s.mappoint.net/mappoint-30/")]
        public FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public FotoFly.BingMapsForEnterprise.LineDriveMapSpecification specification;
        
        public GetLineDriveMapRequest() {
        }
        
        public GetLineDriveMapRequest(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, FotoFly.BingMapsForEnterprise.LineDriveMapSpecification specification) {
            this.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            this.UserInfoRenderHeader = UserInfoRenderHeader;
            this.specification = specification;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetLineDriveMapResponse", WrapperNamespace="http://s.mappoint.net/mappoint-30/", IsWrapped=true)]
    public partial class GetLineDriveMapResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://s.mappoint.net/mappoint-30/", Order=0)]
        public LineDriveMapImage[] GetLineDriveMapResult;
        
        public GetLineDriveMapResponse() {
        }
        
        public GetLineDriveMapResponse(LineDriveMapImage[] GetLineDriveMapResult) {
            this.GetLineDriveMapResult = GetLineDriveMapResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public interface RenderServiceSoapChannel : FotoFly.BingMapsForEnterprise.RenderServiceSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
    public partial class RenderServiceSoapClient : System.ServiceModel.ClientBase<FotoFly.BingMapsForEnterprise.RenderServiceSoap>, FotoFly.BingMapsForEnterprise.RenderServiceSoap {
        
        public RenderServiceSoapClient() {
        }
        
        public RenderServiceSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RenderServiceSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RenderServiceSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RenderServiceSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetMapResponse FotoFly.BingMapsForEnterprise.RenderServiceSoap.GetMap(FotoFly.BingMapsForEnterprise.GetMapRequest request) {
            return base.Channel.GetMap(request);
        }
        
        public MapImage[] GetMap(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, FotoFly.BingMapsForEnterprise.MapSpecification specification) {
            FotoFly.BingMapsForEnterprise.GetMapRequest inValue = new FotoFly.BingMapsForEnterprise.GetMapRequest();
            inValue.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            inValue.UserInfoRenderHeader = UserInfoRenderHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.GetMapResponse retVal = ((FotoFly.BingMapsForEnterprise.RenderServiceSoap)(this)).GetMap(inValue);
            return retVal.GetMapResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.ConvertToPointResponse FotoFly.BingMapsForEnterprise.RenderServiceSoap.ConvertToPoint(FotoFly.BingMapsForEnterprise.ConvertToPointRequest request) {
            return base.Channel.ConvertToPoint(request);
        }
        
        public PixelCoord[] ConvertToPoint(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, LatLong[] latLong, FotoFly.BingMapsForEnterprise.MapView view, int width, int height) {
            FotoFly.BingMapsForEnterprise.ConvertToPointRequest inValue = new FotoFly.BingMapsForEnterprise.ConvertToPointRequest();
            inValue.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            inValue.UserInfoRenderHeader = UserInfoRenderHeader;
            inValue.latLong = latLong;
            inValue.view = view;
            inValue.width = width;
            inValue.height = height;
            FotoFly.BingMapsForEnterprise.ConvertToPointResponse retVal = ((FotoFly.BingMapsForEnterprise.RenderServiceSoap)(this)).ConvertToPoint(inValue);
            return retVal.ConvertToPointResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.ConvertToLatLongResponse FotoFly.BingMapsForEnterprise.RenderServiceSoap.ConvertToLatLong(FotoFly.BingMapsForEnterprise.ConvertToLatLongRequest request) {
            return base.Channel.ConvertToLatLong(request);
        }
        
        public LatLong[] ConvertToLatLong(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, PixelCoord[] pixels, FotoFly.BingMapsForEnterprise.MapView view, int width, int height) {
            FotoFly.BingMapsForEnterprise.ConvertToLatLongRequest inValue = new FotoFly.BingMapsForEnterprise.ConvertToLatLongRequest();
            inValue.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            inValue.UserInfoRenderHeader = UserInfoRenderHeader;
            inValue.pixels = pixels;
            inValue.view = view;
            inValue.width = width;
            inValue.height = height;
            FotoFly.BingMapsForEnterprise.ConvertToLatLongResponse retVal = ((FotoFly.BingMapsForEnterprise.RenderServiceSoap)(this)).ConvertToLatLong(inValue);
            return retVal.ConvertToLatLongResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetBestMapViewResponse FotoFly.BingMapsForEnterprise.RenderServiceSoap.GetBestMapView(FotoFly.BingMapsForEnterprise.GetBestMapViewRequest request) {
            return base.Channel.GetBestMapView(request);
        }
        
        public FotoFly.BingMapsForEnterprise.MapViewRepresentations GetBestMapView(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, Location[] locations, string dataSourceName) {
            FotoFly.BingMapsForEnterprise.GetBestMapViewRequest inValue = new FotoFly.BingMapsForEnterprise.GetBestMapViewRequest();
            inValue.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            inValue.UserInfoRenderHeader = UserInfoRenderHeader;
            inValue.locations = locations;
            inValue.dataSourceName = dataSourceName;
            FotoFly.BingMapsForEnterprise.GetBestMapViewResponse retVal = ((FotoFly.BingMapsForEnterprise.RenderServiceSoap)(this)).GetBestMapView(inValue);
            return retVal.GetBestMapViewResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        FotoFly.BingMapsForEnterprise.GetLineDriveMapResponse FotoFly.BingMapsForEnterprise.RenderServiceSoap.GetLineDriveMap(FotoFly.BingMapsForEnterprise.GetLineDriveMapRequest request) {
            return base.Channel.GetLineDriveMap(request);
        }
        
        public LineDriveMapImage[] GetLineDriveMap(FotoFly.BingMapsForEnterprise.CustomerInfoRenderHeader CustomerInfoRenderHeader, FotoFly.BingMapsForEnterprise.UserInfoRenderHeader UserInfoRenderHeader, FotoFly.BingMapsForEnterprise.LineDriveMapSpecification specification) {
            FotoFly.BingMapsForEnterprise.GetLineDriveMapRequest inValue = new FotoFly.BingMapsForEnterprise.GetLineDriveMapRequest();
            inValue.CustomerInfoRenderHeader = CustomerInfoRenderHeader;
            inValue.UserInfoRenderHeader = UserInfoRenderHeader;
            inValue.specification = specification;
            FotoFly.BingMapsForEnterprise.GetLineDriveMapResponse retVal = ((FotoFly.BingMapsForEnterprise.RenderServiceSoap)(this)).GetLineDriveMap(inValue);
            return retVal.GetLineDriveMapResult;
        }
    }
}
